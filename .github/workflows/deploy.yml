name: Deploy Docker Java Application to Remote Server

on:
  push:
    branches:
      - main # 테스트

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # ssh 접근
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      # 소스 코드 압축
      - name: Compress source code
        run: tar -czf dailysale-src.tar.gz .

      # 소스 코드 전송
      - name: Copy source code to server
        run: scp -i ~/.ssh/id_rsa dailysale-src.tar.gz ${{ secrets.REMOTE_UESR }}@${{ secrets.REMOTE_HOST }}:/dailySale/

      # 원격 서버에서 빌드 및 실행
      - name: Build and run on remote server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.REMOTE_UESR }}@${{ secrets.REMOTE_HOST }} "
            cd /dailySale &&
            tar -xzf dailysale-src.tar.gz -C src &&
            cd src &&
            docker build -t ${{ secrets.DOCKER_USERNAME }}/dailysale:latest . &&
            cd /dailySale &&
            docker stop dailysale-be-container || true &&
            docker rm dailysale-be-container || true &&
            docker run -d --name dailysale-be-container \
              -p 8080:8080 \
              --restart unless-stopped \
              -v /dailySale/logs:/app/logs \
              -v /dailySale/config:/app/config \
              ${{ secrets.DOCKER_USERNAME }}/dailysale:latest
          "

#      # 블루-그린 전환 스크립트 실행 (필요한 경우)
#      - name: Switch Blue-Green Environment
#        run: |
#          ssh -i ~/.ssh/id_rsa ${{ secrets.REMOTE_UESR }}@${{ secrets.REMOTE_HOST }} "cd /dailySale && sh ./blue-green-switch.sh"