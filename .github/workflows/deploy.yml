name: Deploy to Remote Server via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      # Gradle 빌드 (필요한 경우)
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # 압축 파일 생성
      - name: Create ZIP archive
        run: |
          mkdir -p artifacts
          cp build/libs/*.jar artifacts/
          cp -r src artifacts/
          cp -r config artifacts/ || true
          cp Dockerfile artifacts/ || true
          cd artifacts
          zip -r ../dailysale.zip .
          cd ..
          ls -la dailysale.zip

      # SSH 접근 설정
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      # 원격 서버에 디렉토리 생성
#      - name: Create directory on remote server
#        run: |
#          ssh -i ~/.ssh/id_rsa ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "mkdir -p /dailySale"

      # ZIP 파일 전송
      - name: Copy ZIP to remote server
        run: |
          scp -i ~/.ssh/id_rsa dailysale.zip ${{ secrets.REMOTE_UESR }}@${{ secrets.REMOTE_HOST }}:/dailysale/

      # 배포 스크립트 실행
      - name: Deploy on remote server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "
            cd /dailysale &&
            unzip -o dailysale.zip -d app &&
            cd app &&
            docker build -t dailysale:latest . &&
            docker stop dailysale-container || true &&
            docker rm dailysale-container || true &&
            docker run -d --name dailysale-container \
              -p 8880:8080 \
              --restart unless-stopped \
              -v /dailysale/logs:/app/logs \
              -v /dailySale/config:/app/config \
              dailysale:latest
          "

      # 배포 완료 알림
      - name: Deployment notification
        run: echo "✅ Deployment completed successfully!"